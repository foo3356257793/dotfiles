#!/usr/bin/sage

def N_k(k):

    num = (3 + 2*sqrt(2))^k - (3 - 2*sqrt(2))^k
    den = 4 * sqrt(2)

    return ZZ(round(RR( (num/den)^2 )))

def s_k(k):

    num = (3 + 2*sqrt(2))^k - (3 - 2*sqrt(2))^k
    den = 4 * sqrt(2)

    return ZZ(round(RR( (num/den) )))

def t_k(k):

    num = (3 + 2*sqrt(2))^k + (3 - 2*sqrt(2))^k - 2
    den = 4

    return ZZ(round(RR( (num/den) )))

if __name__ == "__main__":

    for k in range(0,11):

        val = N_k(k)

        square_val = s_k(k)
        step_val = t_k(k)

        # if k > 1:
        #     print("\\item $1 + \\cdots + %d = %d \\times %d$\\\\" % (step_val, square_val,
        #         square_val))
        #     print("$%d \\times %d = \\blank$" % (square_val,
        #         square_val))
        # else:
        #     print("\\item $%d \\times %d = \\blank$" % (square_val,
        #         square_val))

        print(square_val^2 == val and step_val*(step_val+1)/2 == val)
