#!/usr/bin/sage

def examine_cycle(p):

    cycle_pow_10 = [10]

    m = 10

    while True:

        m = (10*m) % (p-1)

        if m in cycle_pow_10:
            return False

        if power_mod(10,m,p) == 1:
            return True

        cycle_pow_10.append(m)

def new_examine_cycle(p):

    gp_order = p-1

    G = gcd(gp_order, 10)

    gp_order //= G

    g = gcd(gp_order, 10)

    while g > 1:

        G *= g
        gp_order //= g
        g = gcd(gp_order, 10)

    if power_mod(10,G,p) == 1:
        return True




if __name__ == "__main__":


    S = 0

    for p in prime_range(10,100000):

        print(p)

        if not new_examine_cycle(p):
            S += p

    """
    for p in prime_range(10,100):
        print(p, new_examine_cycle(p))
    """

    print(S)
