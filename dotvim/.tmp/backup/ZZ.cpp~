#include <flint/fmpz.h>

template <typename T>
class _ZZ
{
  public:
    T data;

    _ZZ();

    template<typename U>
    _ZZ(const _ZZ<U> &in);

    template<typename U>
    _ZZ(_ZZ<U> &&in);

    template<typename U>
    _ZZ& operator=(const _ZZ<U> &in);

    template<typename U>
    _ZZ& operator=(_ZZ<U> &&in);

    ~_ZZ();
};

template <>
_ZZ<fmpz_t>::_ZZ(){
  fmpz_init(data);
}

template<>
class _ZZ<fmpz*>
{
  _ZZ(fmpz* in);
};

template <>
_ZZ<fmpz*>::_ZZ(fmpz* in){
  data = in;
}
