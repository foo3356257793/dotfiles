#!/usr/bin/python3

import sys

from pycparser import c_parser, c_ast, parse_file

class FuncDefVisitor(c_ast.NodeVisitor):
    def visit_FuncDef(self, node):
        print('%s at %s' % (node.decl.name, node.decl.coord))


def show_func_defs(filename):
    # Note that cpp is used. Provide a path to your own cpp or
    # make sure one exists in PATH.
    ast = parse_file(filename, use_cpp=True,
                     cpp_args=r'-Iutils/fake_libc_include')

    v = FuncDefVisitor()
    v.visit(ast)


if __name__ == "__main__":

    #filename = "foo.h"
    #filename = "memmgr.h"
    #filename = "/usr/include/flint/fmpz.h"
    filename = "my_fmpz.h"

    ast = parse_file(filename, use_cpp=True,
                     cpp_path='gcc',
                     cpp_args=['-E', r'-Iutils/fake_libc_include',
                               r'-I/usr/include/flint'])
    ast.show()
