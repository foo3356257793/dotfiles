#pragma once

#include "ZZ_vec.hpp"
#include "myflint.hpp"

#include <flint/fmpz_mat.h>

struct ZZ_mat;
struct ZZ_mat_ptr;

struct ZZ_mat {

  fmpz_mat_t data;

  #define _ZZ_mat ZZ_mat
  #include "ZZ_mat/ZZ_mat_struct.hpp"
  #undef _ZZ_mat

  #include "ZZ_mat/ZZ_mat_only.hpp"

  ZZ_mat(int rows, int cols);
  ZZ_mat();

  ZZ_mat(ZZ_mat &&in) noexcept;
  ZZ_mat &operator=(ZZ_mat &&in) noexcept;

  ~ZZ_mat();

};

struct ZZ_mat_ptr {

  fmpz_mat_struct *data;

  ZZ_mat_ptr() = delete;
  ZZ_mat_ptr(fmpz_mat_struct *in) : data(in) {}

  ZZ_mat_ptr(const ZZ_mat &in) = delete;
  ZZ_mat_ptr(const ZZ_mat_ptr &in) = delete;
  ZZ_mat_ptr(ZZ_mat &&in) noexcept = delete;
  ZZ_mat_ptr(ZZ_mat_ptr &&in) noexcept = delete;
  ZZ_mat_ptr &operator=(ZZ_mat &&in) noexcept = delete;
  ZZ_mat_ptr &operator=(ZZ_mat_ptr &&in) noexcept = delete;

  ~ZZ_mat_ptr() {}

  #define _ZZ_mat ZZ_mat_ptr
  #include "ZZ_mat/ZZ_mat_struct.hpp"
  #undef _ZZ_mat

};

#include "ZZ_mat/ZZ_mat_fun.hpp"
