#!/usr/bin/sage

D = 10

import itertools

def build_all_repeated_digit_combos(n,d):

    # pick digits for randoms
    other_digits = [a for a in range(10) if a != d]

    ret = []

    for tup in itertools.product(other_digits, repeat=(D-n)):

        for pos in itertools.combinations(range(D), D-n):

            num_arr = [d] * D

            for i in range(len(pos)):
                num_arr[pos[i]] = tup[i]

            num_str = ''
            for a in num_arr:
                num_str += str(a)
            num = int(num_str)

            # no repeated zeros
            if num <= 10**(D-1):
                continue

            ret.append(int(num_str))

    return ret

def find_all_primes_in_pattern(n,d):

    ret = []
    for p in build_all_repeated_digit_combos(n,d):
        if is_prime(p):
            ret.append(p)

    return ret


if __name__ == "__main__":

    # try 9 repeated digits

    for d in range(10):

        all_primes = find_all_primes_in_pattern(9,d)

        print("%d: %d" % (d, len(all_primes)))

    print('---')
    for d in [0,2,8]:

        all_primes = find_all_primes_in_pattern(8,d)

        print("%d: %d" % (d, len(all_primes)))


