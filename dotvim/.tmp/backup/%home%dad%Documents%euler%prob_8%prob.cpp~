#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

#include <ctype.h>

#include <vector>

#define NUM_ADJACENT (13)

int main(int argc, char *argv[])
{

    // read the file and store digits in a vector

    FILE *fp = fopen( "number.txt", "r" );

    char ch;

    if(fp == NULL)
    {
        printf("Couldn't find the file!\n");
        exit(255);
    }

    std::vector<int64_t> digits = {};

    while((ch = fgetc(fp)) != EOF)
    {
        if(isdigit(ch))
        {
            digits.push_back((int64_t) (ch - '0'));
        }
    }

    fclose(fp);

    int64_t max_prod = 0;

    #pragma omp parallel for
    for(int i=0; i<=digits.size()-NUM_ADJACENT; i++)
    {
        int64_t prod = digits[i];
        for(int j=1; j<NUM_ADJACENT; j++)
        {
            prod *= digits[i+j];
        }

        if(prod > max_prod)
        {
            #pragma omp atomic
            max_prod = prod;
        }
    }

    printf("%ld\n", max_prod);

}

