#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(improper_ctypes)]

include!("bindings.rs");

//use std::ops;

#[allow(dead_code)]
struct ZZ {
    data: fmpz,
}

impl ZZ {
    fn new() -> ZZ {
        let mut out = ZZ{data:0};
        unsafe {
            let data_ptr = &mut out.data as *mut fmpz;
            __fmpz_init(data_ptr);
        }
        return out;
    }
}

impl Drop for ZZ {
    fn drop(&mut self) {
        unsafe {
            let data_ptr = &mut self.data as *mut fmpz;
            __fmpz_clear(data_ptr);
        }
    }
}

fn main() {

    let mut a = ZZ::new();

    unsafe{
        let a_ptr = &mut a.data as *mut fmpz;
        __fmpz_set_ui(a_ptr, 123);
    }

    println!("Hello, world!");

    unsafe{
        let a_ptr = &mut a.data as *mut fmpz;
        fmpz_print(a_ptr);
    }

}
