#!/usr/bin/sage

A = RR( (1+sqrt(5))/2 )
B = RR( (1-sqrt(5))/2 )

def is_pandigital_str(a):

    if len(a) != 9:
        return False

    for i in range(1,10):

        if not str(i) in a:
            return False

    return True

def is_first_last_pandigital_str(a):

    if not is_pandigital_str(a[0:9]):
        return False

    return is_pandigital_str(a[-9:])

def fib_top_digits(k):

    g_approx = (A^k - B^k) / (A-B)

    n_digits = ceil(log(g_approx,10))

    top_g = floor( g_approx / (10**(n_digits-9)) )

    return top_g

if __name__ == "__main__":

    f = fibonacci(2749)
    g = fibonacci(2750)

    k = 2750

    M = 10**9

    f %= M
    g %= M

    # look for bottom pandigital and then test the top

    while True:

        if k % 1000 == 0:
            print('testing k=%d...' % k)

        if is_pandigital_str(str(g)):

            if is_pandigital_str(str(fib_top_digits(k))):

                print('answer')
                print(k)

                break


        t = (f+g) % M
        f = g
        g = t

        k += 1

