#ifndef _isptr
_TYPE::_TYPE(const _SI_TYPE in) : _TYPE() {
  fmpq_set_si(data, in, 1);
}

_TYPE::_TYPE(const _UI_TYPE in) : _TYPE() {
  fmpq_set_ui(data, in, 1);
}

_TYPE::_TYPE(const _SI_TYPE in_1, const _SI_TYPE in_2) : _TYPE() {
  if(in_2 < 0){
    fmpq_set_si(data,-in_1,(ulong) (-in_2));
  }
  else{
    fmpq_set_si(data, in_1, (ulong) (in_2));
  }
}

_TYPE::_TYPE(const _SI_TYPE in_1, const _UI_TYPE in_2) : _TYPE() {
  fmpq_set_si(data, in_1, in_2);
}

_TYPE::_TYPE(const _UI_TYPE in_1, const _SI_TYPE in_2) : _TYPE() {
  if(in_2 < 0){
    fmpq_set_ui(data,in_1,(ulong) (-in_2));
    fmpq_neg(data,data);
  }
  else{
    fmpq_set_ui(data, in_1, (ulong) (in_2));
  }
}

_TYPE::_TYPE(const _UI_TYPE in_1, const _UI_TYPE in_2) : _TYPE() {
  fmpq_set_ui(data, in_1, in_2);
}

_TYPE::_TYPE(const ZZ &in_1, const ZZ &in_2) : _TYPE() {
  fmpq_set_fmpz_frac(data, in_1.data, in_2.data);
}
#endif

