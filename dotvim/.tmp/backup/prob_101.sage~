#!/usr/bin/sage

# Consider the following tenth degree polynomial generating function:
#
# u_n = 1 − n + n^2 − n^3 + n^4 − n^5 + n^6 − n^7 + n^8 − n^9 + n^10
#
# Find the sum of FITs for the BOPs.

def fit_polynomial_to_seq(seq):

    """
    a_0 + a_1*n + ... + a_{k-1}*n^{k-1} = seq[n-1]

    for n = 1, ..., k
    """

    k = len(seq)
    vm_mat = matrix(QQ, k, k)

    for i in range(k):
        for j in range(k):
            vm_mat[i,j] = (i+1)**j

    vm_inv = vm_mat^(-1)

    coeffs = vm_inv * vector(seq)

    return coeffs

if __name__ == "__main__":

    poly_ring.<x> = QQ[]

    #f = 1 - x + x^2 - x^3 + x^4 - x^5 + x^6 - x^7 + x^8 - x^9 + x^10
    f = (x^11+1)/(x+1)

    seq = [f(x=i) for i in range(1,100)]

    sum_fit = 0
    for i in range(1,11):

        poly_coeffs = fit_polynomial_to_seq(seq[0:i])

        g = poly_ring([c for c in poly_coeffs])

        j = 1
        while j < len(seq) and g(x=j) == seq[j-1]:
            j += 1

        if j < len(seq):
            sum_fit += g(x=j)
