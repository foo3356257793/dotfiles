#!/usr/bin/sage

def binary_search(min_val, max_val, test):

    if max_val == min_val:

        return min_val

    if max_val == min_val + 1:

        if test(min_val):
            return min_val
        else:
            return max_val

    mid_val = (max_val+min_val) // 2

    if test(mid_val):

        return binary_search(min_val, mid_val, test)

    else:

        return binary_search(mid_val+1, max_val, test)

if __name__ == "__main__":

    bd = 10**6

    n_bd = 23

    S = 0

    for n in range(1,n_bd+1):

        r_max = n//2

        if binomial(n,r_max) <= bd:
            continue

        r_min = binary_search(0,r_max, lambda x: binomial(n,x) > bd)

        # num vals in [r_min, n-r_min]

        S += (n-2*r_min+1)

    print(S)
