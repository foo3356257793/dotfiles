#!/usr/bin/sage

RF = RealField(100)

from multiprocessing import Pool

p = 999999937

def F_a(a,n):

    val = ceil(sqrt(a)) + sqrt(a)
    val = val**(n)
    val = floor(val)

    return val

def F_a_approx(a,n):

    val = ceil(sqrt(a)) + RF(sqrt(a))
    val = val**(n)
    val = floor(val)

    return val

def f_a(a):

    return F_a(a,a*a) % p

if __name__ == "__main__":

    bd = 1000

    G = 0

    """
    with Pool(4) as pool:
        data = pool.map(f_a, range(1,bd+1))
    """

    for i in range(bd+1):

        print(i)

        G += f_a(i)

    #S = sum(data)
    #S %= p

    print(S)
