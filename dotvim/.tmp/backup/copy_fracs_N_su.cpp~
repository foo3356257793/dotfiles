#ifndef _isptr
_TYPE::_TYPE(const _ZZ_TYPE &in_1, const _SU_TYPE in_2) : _TYPE() {
  fmpq_set_fmpz_frac(data, in_1.data, ZZ(in_2).data);
}

_TYPE::_TYPE(const _SU_TYPE in_1, const _ZZ_TYPE &in_2) : _TYPE() {
  fmpq_set_fmpz_frac(data, ZZ(in_1).data, in_2.data);
}
#endif

_TYPE& _TYPE::operator=(const std::tuple<_ZZ_TYPE,_SU_TYPE> &in) {
  fmpq_set_fmpz_frac(data, get<0>(in).data, ZZ(get<1>(in)).data);
  return *this;
}

_TYPE& _TYPE::operator=(const std::tuple<_SU_TYPE,_ZZ_TYPE> &in) {
  fmpq_set_fmpz_frac(data, ZZ(get<0>(in)).data, get<1>(in).data);
  return *this;
}
