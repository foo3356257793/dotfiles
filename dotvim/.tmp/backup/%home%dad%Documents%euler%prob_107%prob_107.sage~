#!/usr/bin/sage

if __name__ == "__main__":

    fp = open('p107_network.txt', 'r')

    lines = fp.readlines()

    fp.close()

    rows = []
    for line in lines:

        line.strip()
        rows.append( line.split(',') )

    n = len(rows[0])

    mat = matrix(ZZ, n, n)

    for i in range(n):

        row = rows[i]

        for j in range(n):

            if row[j] != '-':
                mat[i,j] = int(row[j])

    """
    # example
    mat = matrix(ZZ, [
        [0,16,12,21,0,0,0],
        [16,0,0,17,20,0,0],
        [12,0,0,28,0,31,0],
        [21,17,28,0,18,19,23],
        [0,20,0,18,0,0,11],
        [0,0,31,19,0,0,27],
        [0,0,0,23,11,27,0]])

    n = 7
    """

    init_weight = sum([sum(mat[i]) for i in range(n)])
    init_weight //= 2

    weight = 0


    while n > 1:

        # find minimal element and reduce
        min_val = 0
        arg_min = [0,0]

        for i in range(n):
            for j in range(i+1,n):

                if mat[i,j] != 0 and (min_val == 0 or mat[i,j] < min_val):
                    min_val = mat[i,j]
                    arg_min = [i,j]

        weight += min_val

        # combine row and column
        i = arg_min[0]
        j = arg_min[1]

        for k in range(n):

            if mat[j,k] != 0:
                if mat[i,k] == 0:
                    mat[i,k] = mat[j,k]
                else:
                    mat[i,k] = min(mat[i,k],mat[j,k])

        for k in range(n):
            mat[k,i] = mat[i,k]

        print("")
        print(mat)
        print('removing j=%d' % j)
        mat = mat.delete_rows([j])
        mat = mat.delete_columns([j])

        print("")
        print(mat)

        n -= 1

    ans = init_weight - weight

    print(ans)


