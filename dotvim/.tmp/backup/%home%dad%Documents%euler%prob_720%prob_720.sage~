#!/usr/bin/sage

#def gen_unpred_perm(n):

def get_perm_from_index(index,n):

    if n == 1:
        return [1]

    index -= 1

    F = factorial(n-1)

    first_element = index // F

    recursive_index = index - first_element * F

    recursive_perm = get_perm_from_index(recursive_index+1,n-1)

    first_element += 1

    for j in range(n-1):

        if recursive_perm[j] >= first_element:
            recursive_perm[j] += 1

    return [first_element] + recursive_perm

def get_unpred(lb_n):

    if lb_n == 1:
        return [1,2]

    top_perm = get_unpred(lb_n-1)

    top_perm = [t + (1<<(lb_n-1)) for t in top_perm]

    perm = [1]

    for t in top_perm:
        perm.append(t)

        if t % 1 == 0:
            new = (t+1)//2
            perm.append(new)

    return list(range(1,(1<<(lb_n-1))+1)) + top_perm


if __name__ == "__main__":

    print(get_perm_from_index(2295,8))

    print(get_unpred(3))
