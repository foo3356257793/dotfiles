#!/usr/bin/python

"""
solve problem 87
"""

from sage.all import prime_range, floor


def branch_sums(curr_sum, lists, max_sum, index):
    """
    branch over the possible sums
    """

    if index >= len(lists):

        return [curr_sum]

    ret = []

    for possible in lists[index]:

        new_sum = curr_sum + possible

        if new_sum > max_sum:
            break

        ret += branch_sums(new_sum, lists, max_sum, index + 1)

    ret.sort()

    if len(ret) > 0:
        unique_ans = [ret[0]]
        for i in range(1, len(ret)):
            if ret[i] != ret[i - 1]:
                unique_ans.append(ret[i])
        ret = unique_ans

    return ret


def prob_87():
    """
    execute prob 87 solution
    """

    bound = 50000000

    primes_2 = [p ** 2 for p in prime_range(floor(bound ** (1 / 2)) + 1)]
    primes_3 = [p ** 3 for p in prime_range(floor(bound ** (1 / 3)) + 1)]
    primes_4 = [p ** 4 for p in prime_range(floor(bound ** (1 / 4)) + 1)]

    prime_lists = [primes_2, primes_3, primes_4]

    ans = branch_sums(0, prime_lists, bound - 1, 0)

    print(len(ans))


if __name__ == "__main__":

    prob_87()
