_QQ_mat &_QQ_mat::translate(const std::function<void(fmpq_mat_t,fmpq_mat_t,const slong)> &fun,
    const _SI in){
  fun(data,data,in);
  return *this;
}

_QQ_mat &_QQ_mat::translate(const std::function<void(fmpq_t,fmpq_t,const slong)> &fun,
    const _SI in){

  for(int row=0; row<nrows(); row++){
    for(int col=0; col<ncols(); col++){
      fun((*this)[row][col].data,(*this)[row][col].data,in);
    }
  }

  return *this;
}

_QQ_mat &_QQ_mat::operator*=(const _SI in)
{
  return translate(fmpq_mul_si,in);
}

#if 0
_QQ_mat &_QQ_mat::operator%=(const _SI in)
{
  return operator%=(ZZ(in));
}

_QQ_mat &_QQ_mat::operator/=(const _SI in)
{
  return operator/=(ZZ(in));
}
#endif
