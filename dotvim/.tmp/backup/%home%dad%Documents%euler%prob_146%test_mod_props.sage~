#!/usr/bin/sage

import itertools

if __name__ == "__main__":

    r_set = [1,3,7,9,13,27]

    p_set = prime_range(2,18)

    valid_values = []

    for p in p_set:

        vals = []

        for n in range(p):

            works = True

            for r in r_set:

                if (power_mod(n,2,p) + r) % p == 0:
                    works = False
                    break

            if works:
                vals.append(n)

        valid_values.append(vals)

        print(p, len(vals))

    R_set = []

    for tup in itertools.product(*valid_values):

        R = crt(list(tup), p_set)

        R_set.append(R)

    R_set.sort()

    Pi = prod(p_set)

    bd = 150 * 10**6
    #bd = 10**6
    #bd = 100

    k_bd = bd // Pi

    add_vals = [1,3,7,9,13,27]

    #bad_vals = [5,11,15,17,19,21,23,25]

    # can ignore multiples of 5
    # can ignore 2 mod 3
    bad_vals = [19,21]

    hits = []

    for k in range(k_bd):

        for r in R_set:

            n = Pi*k + r

            n_sq = n*n

            good = True

            for a in add_vals:

                if not is_prime(n_sq + a):
                    good = False
                    break

            for b in bad_vals:

            if good:
                hits.append(n)

    k = k_bd

    for r in R_set:

        n = Pi*k + r

        if n >= bd:
            break

        n_sq = n*n

        good = True

        for a in add_vals:

            if not is_prime(n_sq + a):
                good = False
                break

        if good:
            hits.append(n)

    # double check hits
    checked_hits = []
    for n in hits:
        good = True

