#!/usr/bin/sage

"""
Sum of all positive integers which cannot be written as the sum of two abundant
numbers.
"""

def prob_23():
    """
    Execute solving prob_23.
    """

    # how to find these: can bound down to <= 28123

    bound = 28123

    sum_of_divisors = [1] * (bound+1)

    sum_of_divisors[0] = 0
    sum_of_divisors[1] = 0

    for i in range(2, ceil(bound/2)): # pylint: disable=undefined-variable

        emm = 2*i

        while emm <= bound:

            sum_of_divisors[emm] += i
            emm += i

    abundant_numbers = []
    for i in range(bound+1):

        if sum_of_divisors[i] > i:
            abundant_numbers.append(i)

    num_abundant = len(abundant_numbers)

    is_sum = [0] * (bound+1)

    for i in range(num_abundant):
        for j in range(i, num_abundant):

            ess = abundant_numbers[i] + abundant_numbers[j]

            if ess > bound:
                break

            is_sum[ess] = 1

    ans = 0

    for ess in range(1, bound+1):

        if is_sum[ess] == 0:

            ans += ess

    print('answer is %d' % ans)

if __name__ == "__main__":

    prob_23()
