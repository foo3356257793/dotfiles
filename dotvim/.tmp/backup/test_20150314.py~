#!/usr/bin/python3

from random import *
from math import sqrt, log

print("Hello, world!")

seed()

a = randint(0,(1<<32)-1)

print("a = %4X" % a)

N = 1 << 8

list = [None] * N

#  mean = [0] * N
#  var = [0] * N
mean_diff = [0] * N
var_diff = [0] * N
mean_diff_16 = [0] * N
var_diff_16 = [0] * N

num_trials = 1 << 8

# for i in range(0,N):
#   list[i] = randint(0,(1<<16)-1)
# list.sort()
# for i in range(0,N):
#   print("%4X" % list[i])

for trial in range(0,num_trials):
  for i in range(0,N):
    list[i] = randint(0,(1<<32)-1)
  list.sort()
  for i in range(0,N-1):
    mean_diff[i] += list[i+1] - list[i]
    var_diff[i] += (list[i+1] - list[i]) ** 2
  for i in range(0,N-16):
    mean_diff_16[i] += list[i+16] - list[i]
    var_diff_16[i] += (list[i+16] - list[i]) ** 2

# normalize mean and var
#  std_dev = [None] * N
#  min95 = [None] * N
#  max95 = [None] * N
#  range95 = [None] * N
#  logdev95 = [None] * N
#  for i in range(0,N):
#    mean[i] /= num_trials
#    var[i] /= num_trials
#    var[i] -= mean[i] ** 2
#    std_dev[i] = sqrt(var[i])
#    min95[i] = mean[i] - 2*std_dev[i]
#    max95[i] = mean[i] + 2*std_dev[i]
#    range95[i] = max95[i] - min95[i]
#    logdev95[i] = log(range95[i], 2)
#
#  num_to_print = 32
#  itr = N//num_to_print
#  for i in range(0,N,itr):
#    print("%4X %4X %f" % (int(mean[i]), int(std_dev[i]), logdev95[i]))

#normalize mean and var
std_dev = [None] * N
for i in range(0,N-1):
  mean_diff[i] /= num_trials
  var_diff[i] /= num_trials
  var_diff[i] -= mean_diff[i] ** 2
  std_dev[i] = sqrt(var_diff[i])

std_dev_16 = [None] * N
for i in range(0,N-16):
  mean_diff_16[i] /= num_trials
  var_diff_16[i] /= num_trials
  var_diff_16[i] -= mean_diff_16[i] ** 2
  std_dev_16[i] = sqrt(var_diff_16[i])

num_to_print = 32
itr = (N-1)//num_to_print
for i in range(0,N-1,itr):
  #print("%4X %4X %f" % (int(mean_diff[i]), int(std_dev[i]), log(std_dev[i],2)))
  print("%15f %15f %15f" % (log(mean_diff[i],2), log(std_dev[i],2), log(std_dev[i],2)))

print("====================")
itr = (N-16)//num_to_print
for i in range(0,N-16,itr):
  #print("%4X %4X %f" % (int(mean_diff_16[i]), int(std_dev_16[i]), log(std_dev_16[i],2)))
  print("%15f %15f %15f" % (log(mean_diff_16[i],2), log(std_dev_16[i],2), log(std_dev_16[i],2)))

for i in range(0,N):
  list[i] = randint(0,(1<<32)-1)
list.sort()

for i in range(0,N,16):
  print("%8X %8X" % (list[i], list[i+15]-list[i]) );
