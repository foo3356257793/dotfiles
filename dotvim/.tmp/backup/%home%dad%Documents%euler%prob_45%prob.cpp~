#include <algorithm>
#include <iostream>
#include <memory>
#include <numeric>
#include <tuple>
#include <vector>

#include <cmath>

using namespace std;

bool is_square(int64_t a)
{
  int64_t sqrt_a = round(sqrt(a));

  return (a - sqrt_a*sqrt_a) == 0;
}

int64_t sqrt_exact(int64_t a)
{
  return (int64_t) round(sqrt(a));
}

bool is_hexagonal(int64_t a)
{
  if(!is_square(1+8*a))
  {
    return false;
  }

  return ((1 + sqrt_exact(1+8*a)) & 3) == 0;

}

int64_t prob_45()
{
  auto P = [](const int64_t &x) {
    return (x*(3*x-1)) >> 1;
  };

  int64_t k = 166;

  int64_t p = P(k);

  while(!is_hexagonal(p))
  {
    k++;
    p = P(k);
  }

  return p;
}

int main() {

  auto answer = prob_45();

  cout << answer << endl;
}

