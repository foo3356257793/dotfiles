#include <flint/fmpz.h>

#include <algorithm>
#include <iomanip>
#include <iostream>
#include <string>
#include <type_traits>
#include <variant>
#include <vector>

struct ZZ{
  #include "ZZ_only.hpp"

  #define _ZZ ZZ
  #include "ZZ_both.hpp"
  #undef _ZZ
}

struct _ZZ {
  #ifndef _isptr
  fmpz* data;

  ZZ_ptr() = delete;
  ZZ_ptr(const ZZ &in) = delete;
  ZZ_ptr(fmpz* in);

  ZZ_ptr &operator(ZZ &in) noexcept = delete;
  ZZ_ptr &operator=(ZZ_ptr &&in) noexcept = delete;
  ~ZZ_ptr();
  #else
  fmpz_t data;

  ZZ();
  ZZ(const ZZ &in);

  ZZ(ZZ &&in) noexcept;
  ZZ(ZZ_ptr &&in) noexcept = delete;

  ZZ &operator(ZZ &in) noexcept;
  ZZ &operator=(ZZ_ptr &&in) noexcept = delete;

  ~ZZ();
  #endif


  #include "ZZ_ZZ_struct.hpp"

};
