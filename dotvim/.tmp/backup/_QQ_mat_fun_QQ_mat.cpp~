QQ_mat translate(const std::function<void(fmpq_mat_t, const fmpq_mat_t)> &fun,
    const _QQ_mat_1 &in) {
  auto out = QQ_mat(in.nrows(), in.ncols());
  fun(out.data, in.data);
  return out;
}

bool is_square(const _QQ_mat_1 &in){
  return in.nrows() == in.ncols();
}

QQ_mat inverse(const _QQ_mat_1 &in) {

  if(!is_square(in)){
    throw std::invalid_argument("Inverse of non-square");
  }

  auto out = QQ_mat(in.nrows(),in.nrows());

  auto success = fmpq_mat_inv(out.data,in.data);
  if(success == 0){
    throw std::invalid_argument("Inverse of singular matrix");
  }
  return out;
}
