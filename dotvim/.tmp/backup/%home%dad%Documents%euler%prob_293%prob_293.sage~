#!/usr/bin/sage

import time

def _branch_admissible_vals(base, p, bd):

    q = next_prime(p)

    a = base * p

    ret = []

    while a < bd:

        ret.append(a)

        ret += _branch_admissible_vals(a, q, bd)

        a *= p

    return ret

def branch_admissible_vals(bd):

    ret = _branch_admissible_vals(1,2,bd)

    ret.sort()

    return ret

if __name__ == "__main__":


    start_tm = time.perf_counter()


    #bd = 2**20
    bd = 10**9
    adm_nums = branch_admissible_vals(bd)

    pseudo_fort = []

    for n in adm_nums:

        p = next_prime(n+1)

        m = p-n


    num_adm = len(adm_nums)

    end_tm = time.perf_counter()
    tot_tm = end_tm-start_tm
    print("TIME = %.3lf" % tot_tm)

    print('bd = %.3lf' % (lb(bd)))
    print('#  = %.3lf' % (lb(num_adm)))

