#!/usr/bin/perl

################################################################################
# Project Euler, Problem 96                                                    #
#   Sudoku solver                                                              #
################################################################################

use strict;
use warnings;

sub gridRef($);
sub simplify($);
sub simplifyByPairs($);
sub printGridRef($);
sub findOnlyPossible($);
sub reduceByCross($);

my $sudokuFile = 'sudoku_test_4.txt';
open my $fileHandle, '<', $sudokuFile or die "$sudokuFile: $!\n";
my @grids;
my @gridTitles;
while(<$fileHandle>){
  chomp(my $gridTitle = $_);
  if($gridTitle =~ /^Grid/){
    push @gridTitles, $gridTitle;
    my @grid;
    for(my $index = 0; $index < 9; $index++){
      chomp(my $line = <$fileHandle>);
      push @grid, $line;
    }
    push @grids, \@grid;
  }
}
close $fileHandle;

foreach my $grid (@grids){
  my $gridRef = gridRef($grid);
  my $quadrupleSearch = 1;
  while($quadrupleSearch){
    my $tripleSearch = 1;
    while($tripleSearch){
      my $doubleSearch = 1;
      while($doubleSearch){
        my $search = 1;
        while($search){
          $search = simplify($gridRef);
        }
        $doubleSearch = simplifyByPairs($gridRef);
      }
      $tripleSearch = findOnlyPossible($gridRef);
    }
    $quadrupleSearch = reduceByCross($gridRef);
  }
  my $gridTitle = shift (@gridTitles);
  print "$gridTitle\n";
  printGridRef($gridRef);
}


sub gridRef($){
  my $grid = shift;
  my $gridRef;
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    my $row = $grid->[$rowIndex];
    my @row = split('',$row);
    for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
      if($row[$columnIndex] == 0){
        $gridRef->[$rowIndex]->[$columnIndex] = '123456789';
      }
      else{
        $gridRef->[$rowIndex]->[$columnIndex] = $row[$columnIndex];
      }
    }
  }
  return $gridRef;
}

sub simplify($){
  my $gridRef = shift;
  my $search = 0;

  # rows
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
      if(length($gridRef->[$rowIndex]->[$columnIndex]) == 1){
        my $value = $gridRef->[$rowIndex]->[$columnIndex];
        for(my $otherColumnIndex = 0; $otherColumnIndex < 9; $otherColumnIndex++){
          unless($otherColumnIndex == $columnIndex){
            if($gridRef->[$rowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
              $search = 1;
              $gridRef->[$rowIndex]->[$otherColumnIndex] = "$1$2";
            }
          }
        }
      }
    }
  }


  # columns
  for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
    for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
      if(length($gridRef->[$rowIndex]->[$columnIndex]) == 1){
        my $value = $gridRef->[$rowIndex]->[$columnIndex];
        for(my $otherRowIndex = 0; $otherRowIndex < 9; $otherRowIndex++){
          unless($otherRowIndex == $rowIndex){
            if($gridRef->[$otherRowIndex]->[$columnIndex] =~ /^(.*)$value(.*)$/){
              $search = 1;
              $gridRef->[$otherRowIndex]->[$columnIndex] = "$1$2";
            }
          }
        }
      }
    }
  }


  # squares
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
      if(length($gridRef->[$rowIndex]->[$columnIndex]) == 1){
        my $value = $gridRef->[$rowIndex]->[$columnIndex];
        my $squareRowStart = 3*int($rowIndex/3);
        my $squareColumnStart = 3*int($columnIndex/3);
        for(my $squareRowIndex = $squareRowStart; $squareRowIndex < $squareRowStart + 3; $squareRowIndex++){
          for(my $squareColumnIndex = $squareColumnStart; $squareColumnIndex < $squareColumnStart + 3; $squareColumnIndex++){
            unless($squareRowIndex == $rowIndex and $squareColumnIndex == $columnIndex){
              if($gridRef->[$squareRowIndex]->[$squareColumnIndex] =~ /^(.*)$value(.*)$/){
                $search = 1;
                $gridRef->[$squareRowIndex]->[$squareColumnIndex] = "$1$2";
              }
            }
          }
        }
      }
    }
  }

  return $search;
}

sub printGridRef($){
  my $gridRef = shift;

  my @columnWidths;
  for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
    my $maxWidth = 0;
    for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
      my $width = length($gridRef->[$rowIndex]->[$columnIndex]);
      $maxWidth = $width > $maxWidth ? $width : $maxWidth;
    }
    push @columnWidths, ($maxWidth + 1);
  }
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
      printf("%$columnWidths[$columnIndex]s", $gridRef->[$rowIndex]->[$columnIndex]);
    }
    print "\n";
  }

  return 0;
}

sub simplifyByPairs($){
  my $gridRef = shift;
  my $search = 0;
  # assume $gridRef is simplified with simplify($)

  # rows
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    my @pairs;
    for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
      my $value = $gridRef->[$rowIndex]->[$columnIndex];
      if(length($value) == 2){
        push @pairs, $value;
      }
    }
    foreach my $pair (@pairs){
      if(grep {$_ eq $pair} @pairs > 1){
        my @values = split('', $pair);
        foreach my $value (@values){
          for(my $otherColumnIndex = 0; $otherColumnIndex < 9; $otherColumnIndex++){
            unless($gridRef->[$rowIndex]->[$otherColumnIndex] eq $pair){
              if($gridRef->[$rowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
                $search = 1;
                $gridRef->[$rowIndex]->[$otherColumnIndex] = "$1$2";
              }
            }
          }
        }
        my %square;
        foreach my $index (grep{ $gridRef->[$rowIndex]->[$_] eq $pair } (0..8)){
          $square{3 * int($index/3)}++;
        }
        my @square = keys %square;
        if(@square == 1){
          my $squareColumnIndex = shift @square;
          my $squareRowIndex = 3 * int($rowIndex/3);
          for(my $otherRowIndex = $squareRowIndex; $otherRowIndex < $squareRowIndex + 3; $otherRowIndex++){
            unless($otherRowIndex == $rowIndex){
              for(my $otherColumnIndex = $squareColumnIndex; $otherColumnIndex < $squareColumnIndex + 3; $otherColumnIndex++){
                foreach my $value (@values){
                  if($gridRef->[$otherRowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
                    $search = 1;
                    $gridRef->[$otherRowIndex]->[$otherColumnIndex] = "$1$2";
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  # columns
  for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
    my @pairs;
    for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
      my $value = $gridRef->[$rowIndex]->[$columnIndex];
      if(length($value) == 2){
        push @pairs, $value;
      }
    }
    foreach my $pair (@pairs){
      if(grep {$_ eq $pair} @pairs > 1){
        my @values = split('', $pair);
        foreach my $value (@values){
          for(my $otherRowIndex = 0; $otherRowIndex < 9; $otherRowIndex++){
            unless($gridRef->[$otherRowIndex]->[$columnIndex] eq $pair){
              if($gridRef->[$otherRowIndex]->[$columnIndex] =~ /^(.*)$value(.*)$/){
                $search = 1;
                $gridRef->[$otherRowIndex]->[$columnIndex] = "$1$2";
              }
            }
          }
        }
        my %square;
        foreach my $index (grep{ $gridRef->[$_]->[$columnIndex] eq $pair } (0..8)){
          $square{3 * int($index/3)}++;
        }
        my @square = keys %square;
        if(@square == 1){
          my $squareRowIndex = shift @square;
          my $squareColumnIndex = 3 * int($columnIndex/3);
          for(my $otherColumnIndex = $squareColumnIndex; $otherColumnIndex < $squareColumnIndex + 3; $otherColumnIndex++){
            unless($otherColumnIndex == $columnIndex){
              for(my $otherRowIndex = $squareRowIndex; $otherRowIndex < $squareRowIndex + 3; $otherRowIndex++){
                foreach my $value (@values){
                  if($gridRef->[$otherRowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
                    $search = 1;
                    $gridRef->[$otherRowIndex]->[$otherColumnIndex] = "$1$2";
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  # squares
  for(my $squareRowIndex = 0; $squareRowIndex < 9; $squareRowIndex += 3){
    for(my $squareColumnIndex = 0; $squareColumnIndex < 9; $squareColumnIndex += 3){
      my @pairs;
      for(my $rowIndex = $squareRowIndex; $rowIndex < $squareRowIndex + 3; $rowIndex++){
        for(my $columnIndex = $squareColumnIndex; $columnIndex < $squareColumnIndex + 3; $columnIndex++){
          my $value = $gridRef->[$rowIndex]->[$columnIndex];
          if(length($value) == 2){
            push @pairs, $value;
          }
        }
      }
      foreach my $pair (@pairs){
        if(grep {$_ eq $pair} @pairs > 1){
          my @values = split('', $pair);
          foreach my $value (@values){
            for(my $rowIndex = $squareRowIndex; $rowIndex < $squareRowIndex + 3; $rowIndex++){
              for(my $columnIndex = $squareColumnIndex; $columnIndex < $squareColumnIndex + 3; $columnIndex++){
                unless($gridRef->[$rowIndex]->[$columnIndex] eq $pair){
                  if($gridRef->[$rowIndex]->[$columnIndex] =~ /^(.*)$value(.*)$/){
                    $search = 1;
                    $gridRef->[$rowIndex]->[$columnIndex] = "$1$2";
                  }
                }
              }
            }
          }
        }
      }
    }
  }



  return $search;
}

sub findOnlyPossible($){
  my $gridRef = shift;
  my $search = 0;

  #rows
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    for(my $value = 1; $value <= 9; $value++){
      my @possible = grep {$gridRef->[$rowIndex]->[$_] =~ /$value/} (0..8);
      if(@possible == 1){
        my $columnIndex = shift(@possible);
        unless($gridRef->[$rowIndex]->[$columnIndex] eq $value){
          $search = 1;
          $gridRef->[$rowIndex]->[$columnIndex] = $value;
        }
      }
    }
  }

  #columns
  for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
    for(my $value = 1; $value <= 9; $value++){
      my @possible = grep {$gridRef->[$_]->[$columnIndex] =~ /$value/} (0..8);
      if(@possible == 1){
        my $rowIndex = shift(@possible);
        unless($gridRef->[$rowIndex]->[$columnIndex] eq $value){
          $search = 1;
          $gridRef->[$rowIndex]->[$columnIndex] = $value;
        }
      }
    }
  }

  #square
  for(my $squareRowIndex = 0; $squareRowIndex < 9; $squareRowIndex += 3){
    for(my $squareColumnIndex = 0; $squareColumnIndex < 9; $squareColumnIndex += 3){
      for(my $value = 1; $value <= 9; $value++){
        my @possible = grep {$gridRef->[$squareRowIndex + int($_/3)]->[$squareColumnIndex + ($_ % 3)] =~ /$value/} (0..8);
        if(@possible == 1){
          my $index = shift(@possible);
          my $rowIndex = $squareRowIndex + int($index/3);
          my $columnIndex = $squareColumnIndex + ($index % 3);
          unless($gridRef->[$rowIndex]->[$columnIndex] eq $value){
            $search = 1;
            $gridRef->[$rowIndex]->[$columnIndex] = $value;
          }
        }
      }
    }
  }

  return $search;
}

sub reduceByCross($){
  my $gridRef = shift;
  my $search = 0;

  #rows
  for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
    for(my $value = 1; $value <= 9; $value++){
      my @possible = grep {$gridRef->[$rowIndex]->[$_] =~ /$value/} (0..8);
      if(@possible > 1){
        my %squares;
        foreach my $possible (@possible){
          $squares{3 * int($possible/3)}++;
        }
        my @squares = keys %squares;
        if(@squares == 1){
          my $squareColumnIndex = shift(@squares);
          my $squareRowIndex = 3 * int($rowIndex/3);
          for(my $otherRowIndex = $squareRowIndex; $otherRowIndex < $squareRowIndex + 3; $otherRowIndex++){
            unless($rowIndex == $otherRowIndex){
              for(my $otherColumnIndex = $squareColumnIndex; $otherColumnIndex < $squareColumnIndex + 3; $otherColumnIndex++){
                if($gridRef->[$otherRowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
                  $search = 1;
                  $gridRef->[$otherRowIndex]->[$otherColumnIndex] = "$1$2";
                }
              }
            }
          }
        }
      }
    }
  }

  #columns
  for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
    for(my $value = 1; $value <= 9; $value++){
      my @possible = grep {$gridRef->[$_]->[$columnIndex] =~ /$value/} (0..8);
      if(@possible > 1){
        my %squares;
        foreach my $possible (@possible){
          $squares{3 * int($possible/3)}++;
        }
        my @squares = keys %squares;
        if($columnIndex == 4 and $value == 4){
          print "for column $columnIndex and value $value we have squares @squares\n";
        }
        if(@squares == 1){
          my $squareRowIndex = shift(@squares);
          my $squareColumnIndex = 3 * int($columnIndex/3);
          for(my $otherColumnIndex = $squareColumnIndex; $otherColumnIndex < $squareColumnIndex + 3; $otherColumnIndex++){
            unless($columnIndex == $otherColumnIndex){
              for(my $otherRowIndex = $squareRowIndex; $otherRowIndex < $squareRowIndex + 3; $otherRowIndex++){
                if($gridRef->[$otherRowIndex]->[$otherColumnIndex] =~ /^(.*)$value(.*)$/){
                  $search = 1;
                  $gridRef->[$otherRowIndex]->[$otherColumnIndex] = "$1$2";
                }
              }
            }
          }
        }
      }
    }
  }

  #square
  for(my $squareRowIndex = 0; $squareRowIndex < 9; $squareRowIndex += 3){
    for(my $squareColumnIndex = 0; $squareColumnIndex < 9; $squareColumnIndex += 3){
      for(my $value = 1; $value <= 9; $value++){
        my @possible = grep {$gridRef->[$squareRowIndex + int($_/3)]->[$squareColumnIndex + ($_ % 3)] =~ /$value/} (0..8);
        if(@possible > 1){
          my %rows;
          foreach my $possible (@possible){
            $rows{$squareRowIndex + int($possible/3)}++;
          }
          my @rows = keys %rows;
          if(@rows == 1){
            my $rowIndex = shift(@rows);
            for(my $columnIndex = 0; $columnIndex < 9; $columnIndex++){
              unless(3 * int($columnIndex/3) == $squareColumnIndex){
                if($gridRef->[$rowIndex]->[$columnIndex] =~ /^(.*)$value(.*)$/){
                  $search = 1;
                  $gridRef->[$rowIndex]->[$columnIndex] = "$1$2";
                }
              }
            }
          }
          my %columns;
          foreach my $possible (@possible){
            $columns{$squareColumnIndex + ($possible % 3)}++;
          }
          my @columns = keys %columns;
          if(@columns == 1){
            my $columnIndex = shift(@columns);
            for(my $rowIndex = 0; $rowIndex < 9; $rowIndex++){
              unless(3 * int($rowIndex/3) == $squareRowIndex){
                if($gridRef->[$rowIndex]->[$columnIndex] =~ /^(.*)$value(.*)$/){
                  $search = 1;
                  $gridRef->[$rowIndex]->[$columnIndex] = "$1$2";
                }
              }
            }
          }
        }
      }
    }
  }

  return $search;
}
