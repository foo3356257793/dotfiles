_ZZ_mat &_ZZ_mat::translate(const std::function<void(fmpz_mat_t,fmpz_mat_t,const slong)> &fun,
    const _SI in){
  fun(data,data,in);
  return *this;
}

_ZZ_mat &_ZZ_mat::translate(const std::function<void(fmpz_t,fmpz_t,const slong)> &fun,
    const _SI in){

  for(int row=0; row<nrows(); row++){
    for(int col=0; col<ncols(); col++){
      fun((*this)[row][col].data,(*this)[row][col].data,in);
    }
  }

  return *this;
}

_ZZ_mat &_ZZ_mat::operator*=(const _SI in)
{
  return translate(fmpz_mat_scalar_mul_si,in);
}

_ZZ_mat &_ZZ_mat::operator%=(const _SI in)
{
  if(in < 0){
    throw std::invalid_argument("% with negative integer not implemented");
  }
  return translate(fmpz_mod_ui,static_cast<ulong>(in));
}

_ZZ_mat &_ZZ_mat::divexact_eq(const _SI in)
{
  return translate(fmpz_mat_scalar_divexact_si,in);
}
