#!/usr/bin/sage

def branch_pandigital(val, digits, test):
    """
    Abort when we find a hit.
    """

    num_digits = len(digits)

    if num_digits == 0:

        if test(val):

            return [val]

        else:

            return []

    ret = []

    for i in range(num_digits):

        new_val = 10*val + digits[i]

        rest_digits = digits[0:i]
        rest_digits = rest_digits + digits[i+1:]

        ret = branch_pandigital(new_val, rest_digits, test)

        if len(ret) > 0:
            break

    return ret


if __name__ == "__main__":

    # TEST n-digital numbers in reverse order
    for n in range(9,0,-1):

        digits = [i for i in range(n,0,-1)]

        if sum(digits) % 3 == 0:
            # all pandigitals are divisible by 3
            continue

        hits = branch_pandigital(0, digits, lambda x: is_prime(x))

        if len(hits) > 0:

            print("answer:")
            print(hits[0])
            break

