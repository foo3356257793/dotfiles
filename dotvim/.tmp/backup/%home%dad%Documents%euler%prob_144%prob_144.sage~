#!/usr/bin/sage

def new_pt_and_vec(pt, vec):
    """
    have pt via approaching from vec
    """

    m = -4 * pt[0] / pt[1]

    normal_vec = vector(RR, [-m,1])
    normal_vec = normal_vec / norm(normal_vec)
    theta_normal = arccos(normal_vec[0])

    vec = vec / norm(vec)
    if vec[1] < 0:
        vec *= -1
    theta_vec = arccos(vec[0])

    theta_new = 2*theta_normal - theta_vec

    print('---')
    print(theta_normal)
    print(theta_vec)
    print(theta_new)
    print('---')

    new_vec = vector(RR, [cos(theta_new), sin(theta_new)])

    t = -2*(4*pt[0]*new_vec[0] + pt[1]*new_vec[1]) / (4*new_vec[0]^2 + new_vec[1]^2)

    new_pt = t * new_vec + pt

    return new_pt, new_vec

if __name__ == "__main__":

    pl = ellipse((0,0), 5, 10, color='black')

    pt = vector(RR, [1.4, -9.6])

    pl += line([(0,10.1), pt], color='red')

    vec = vector(RR, [0,10.1]) - pt
    vec = vec / norm(vec)

    num_hit = 1

    #while True:
    for i in range(9):

        old_pt = pt
        pt, vec = new_pt_and_vec(pt, vec)

        #pl += line([old_pt, pt], color='red')

        if pt[0] >= -0.01 and pt[0] <= 0.01 and pt[1] > 0:
            break

        num_hit += 1

    print(num_hit)
