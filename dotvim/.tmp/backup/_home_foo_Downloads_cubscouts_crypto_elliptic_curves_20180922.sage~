#!/usr/bin/sage

if __name__ == "__main__":

  set_random_seed(8)

  p = 11

  poly_ZZ.<x> = ZZ[]
  rhs = x^3 - x

  pts = []
  Mring.<u> = GF(p)[]
  for xval in range(p):
    mpoly = u^2 - rhs(x=xval)
    rts = mpoly.roots()

    for tup in rts:
      r = ZZ( tup[0] )
      pts.append([xval,r])
      pts.append([xval,r-p])
      pts.append([xval-p,r])
      pts.append([xval-p,r-p])

  pl = list_plot(pts, gridlines=True)

  pl.show()
  pl.save("ecurve.png")

  """
  ind0 = randrange(len(pts))
  ind1 = randrange(len(pts))
  while pts[ind1][0] == pts[ind0][0]:
    ind1 = randrange(len(pts))

  line_pts = [pts[ind0], pts[ind1]]

  s = ( (pts[ind1][1] - pts[ind0][1]) *
  inverse_mod(pts[ind1][0]-pts[ind0][0], p) ) % p

  x_new = s^2 - pts[ind0][0] - pts[ind0][1]
  x_new %= p
  y_new = pts[ind0][1] + s*(pts[ind1][0] - pts[ind0][0])
  y_new %= p

  line_pts.append([x_new,y_new])

  pl += list_plot(line_pts, color='red')

  pl.show()
  """
