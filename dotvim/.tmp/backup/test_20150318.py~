#!/usr/bin/python3

from random import *

seed()

max_key = 1<<16

def vec_cmp(a,b):
  for j in range(0,16):
    if a[j] > b[j]:
      a[j], b[j] = b[j], a[j]
  return a, b

num_trials = 1

a = [None] * 16

a_0  = [None] * 16
a_1  = [None] * 16
a_2  = [None] * 16
a_3  = [None] * 16
a_4  = [None] * 16
a_5  = [None] * 16
a_6  = [None] * 16
a_7  = [None] * 16
a_8  = [None] * 16
a_9  = [None] * 16
a_10 = [None] * 16
a_11 = [None] * 16
a_12 = [None] * 16
a_13 = [None] * 16
a_14 = [None] * 16
a_15 = [None] * 16


for trial in range(0,num_trials):
  for j in range(0,16):
    a[j] = randint(1,max_key)
    if (a[j] & 1) == (j & 1):
      a_0[j] = a[j]
      a_1[j^1] = 0
    else:
      a_0[j] = 0
      a_1[j^1] = a[j]
  a_0, a_1 = vec_cmp(a_0,a_1)
  for j in range(0,16):
    print("%4X %4X %4X" % (a[j], a_0[j], a_1[j]));
  for j in range(0,16):
    if(a_0[j] & 2) == (j & 2):
      a_2[j^2] = 0
    else:
      a_2[j^2] = a_0[j]
      a_0[j] = 0
    if(a_1[j] & 2) == (j & 2):
      a_3[j^2] = 0
    else:
      a_3[j^2] = a_1[j]
      a_1[j] = 0
  a_0, a_2 = vec_cmp(a_0, a_2)
  a_1, a_3 = vec_cmp(a_1, a_3)
  a_0, a_1 = vec_cmp(a_0, a_1)
  a_2, a_3 = vec_cmp(a_2, a_3)
  a_1, a_2 = vec_cmp(a_1, a_2)
  for j in range(0,16):
    print("%4X %4X %4X %4X %4X" % (a[j], a_0[j], a_1[j], a_2[j], a_3[j]));
  for j in range(0,16):
    if(a_0[j] & 4) == (j & 4):
      a_4[j^4] = 0
    else:
      a_4[j^4] = a_0[j]
      a_4[j] = 0
    if(a_1[j] & 4) == (j & 4):
      a_5[j^4] = 0
    else:
      a_5[j^4] = a_1[j]
      a_1[j] = 0
    if(a_2[j] & 4) == (j & 4):
      a_6[j^4] = 0
    else:
      a_6[j^4] = a_2[j]
      a_2[j] = 0
    if(a_3[j] & 4) == (j & 4):
      a_7[j^4] = 0
    else:
      a_7[j^4] = a_3[j]
      a_3[j] = 0
  a_0, a_4 = vec_cmp(a_0, a_4)
  a_1, a_5 = vec_cmp(a_1, a_5)
  a_2, a_6 = vec_cmp(a_2, a_6)
  a_3, a_7 = vec_cmp(a_3, a_7)

  a_0, a_6 = vec_cmp(a_0, a_6)
  a_2, a_4 = vec_cmp(a_2, a_4)
  a_0, a_2 = vec_cmp(a_0, a_2)
  a_4, a_6 = vec_cmp(a_4, a_6)
  a_1, a_7 = vec_cmp(a_1, a_7)
  a_3, a_5 = vec_cmp(a_3, a_5)
  a_1, a_3 = vec_cmp(a_1, a_3)
  a_5, a_7 = vec_cmp(a_5, a_7)

  a_0, a_1 = vec_cmp(

  for j in range(0,16):
    print("%4X %4X %4X %4X %4X %4X %4X %4X %4X" % (a[j], a_0[j], a_1[j], a_2[j],
      a_3[j], a_4[j], a_5[j], a_6[j], a_7[j]));
