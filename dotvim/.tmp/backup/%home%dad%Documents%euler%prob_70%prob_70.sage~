#!/usr/bin/sage

def are_permutations(a,b):

    a_str = str(a)
    b_str = str(b)

    aa = [c for c in a_str]
    bb = [c for c in b_str]

    aa.sort()
    bb.sort()

    return aa == bb

if __name__ == "__main__":

    bd = 10**7

    tot_ratios = [1] * (bd)

    primes = prime_range(bd)

    n_iter = 0

    for p in primes:

        n_iter += 1
        if (n_iter % 1000) == 0:
            print('sieve...', n_iter)

        rat = p/(p-1)

        for m in range(p,bd,p):

            tot_ratios[m] *= rat

    arg_min = 1
    min_tot = 0

    n_iter = 0

    for a in range(2,bd):

        n_iter += 1
        if n_iter % 10000 == 0:
            print('perms...', n_iter)

        tot = a / tot_ratios[a]

        if are_permutations(a,tot):

            if arg_min <= 1 or tot_ratios[a] < min_tot:

                arg_min = a
                min_tot = tot_ratios[a]

    print(arg_min)



