#!/usr/bin/sage

def foo(n,p):

    out = 1

    while n > p:

        out *= p/n
        r = p * random()
        n -= r

    return out

def bar(n0,p0,n1,p1):

    if p0 < p1:
        raise ValueError("expected p0>p1")

    tot = 0
    out = 1

    while n0 > p1:

        r_max = min([n0,p0,max(p1,n1-tot)])

        out *= r_max / n0
        r = r_max * random()

        if r > p1:
            tot += r

        n0 -= r

    return out


if __name__ == "__main__":


    #set_random_seed(1234)

    log2_trials = 15
    trials = 1<<log2_trials

    n = 1024
    p = 256

    out = 0

    print(f"{RR(log(dickman_rho(n/p),2)):.6f}")

    for trial in range(trials):

        # if trial % 16 == 0:
        #     print(trial)

        out += foo(n,p)

    out /= trials

    print(f"{RR(log(out,2)):.6f}")

    n1 = 824
    p1 = 30

    out = 0

    for trial in range(trials):

        # if trial % 16 == 0:
        #     print(trial)

        out += bar(n,p,n1,p1)

    out /= trials

    print(f"{RR(log(out,2)):.6f}")
