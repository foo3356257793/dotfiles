#pragma once

#include "myflint_ZZ.hpp"

struct div_op_temporary {
  ZZ *number;

  operator const ZZ() { return *number; }

};

struct div_operator {};

div_op_temporary operator<(ZZ lhs, div_operator rhs);
div_op_temporary operator >(div_operator lhs, ZZ rhs);
ZZ operator >(div_op_temporary lhs, ZZ rhs);

const div_operator divexact;

// POW OP

struct pow_op_temporary {
  ZZ *number;

  operator const ZZ() { return *number; }

};

struct pow_operator {};

pow_op_temporary operator<(ZZ lhs, pow_operator rhs);
pow_op_temporary operator >(pow_operator lhs, int64_t rhs);
ZZ operator >(pow_op_temporary lhs, int64_t rhs);

const pow_operator power;
