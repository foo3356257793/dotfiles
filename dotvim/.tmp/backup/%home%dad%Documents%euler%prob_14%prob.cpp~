#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#include <algorithm>
#include <iostream>
using namespace std;

const int bound = 1000000;
// const int bound = 14;

int64_t collatz_step(int64_t input_number) {
  if ((input_number % 2) == 1)  // odd
    return 3 * input_number + 1;

  return input_number / 2;
}

int main() {
  int chain_length[bound];

  chain_length[0] = 0;
  chain_length[1] = 1;

  for (int64_t starting_number = 2; starting_number < bound;
       starting_number++) {
    int64_t test_number = collatz_step(starting_number);
    chain_length[starting_number] = 1;

    while (test_number >= starting_number) {
      test_number = collatz_step(test_number);
      chain_length[starting_number] += 1;
    }

    #if 0
    if(test_number <= 0)
    {
      cout << "something went wrong at " << starting_number << "\n";
    }
    #endif

    chain_length[starting_number] += chain_length[test_number];
  }

  cout << distance(chain_length,
                   max_element(chain_length, chain_length + bound))
       << "\n";
}
