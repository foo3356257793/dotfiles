#define _TYPE_OUT _TYPE
#define _funname_eq operator+=
#define _funnative _fun_paster(_ftype,add)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator-=
#define _funnative _fun_paster(_ftype,sub)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator*=
#define _funnative _fun_paster(_ftype,mul)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator%=
#define _funnative _fun_paster(_ftype,mod)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator+=
#define _funnative _fun_paster(_ftype,add_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator+=
#define _funnative _fun_paster(_ftype,add_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator-=
#define _funnative _fun_paster(_ftype,sub_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator-=
#define _funnative _fun_paster(_ftype,sub_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator*=
#define _funnative _fun_paster(_ftype,mul_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator*=
#define _funnative _fun_paster(_ftype,mul_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _funname_eq _fun_eq_paster(cdiv_q)
#define _funnative _fun_paster(_ftype,cdiv_q)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq

#define _funname_eq _fun_eq_paster(fdiv_q)
#define _funnative _fun_paster(_ftype,fdiv_q)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq

#define _funname_eq _fun_eq_paster(tdiv_q)
#define _funnative _fun_paster(_ftype,tdiv_q)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq

#define _funname_eq _fun_eq_paster(divexact)
#define _funnative _fun_paster(_ftype,divexact)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq

#define _funname_eq _fun_eq_paster(gcd)
#define _funnative _fun_paster(_ftype,gcd)
#include "fun_NN_eq_star.cpp"
#undef _funnative
#undef _funname_eq

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(cdiv_q)
#define _funnative _fun_paster(_ftype,cdiv_q_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(cdiv_q)
#define _funnative _fun_paster(_ftype,cdiv_q_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(fdiv_q)
#define _funnative _fun_paster(_ftype,fdiv_q_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(fdiv_q)
#define _funnative _fun_paster(_ftype,fdiv_q_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(tdiv_q)
#define _funnative _fun_paster(_ftype,tdiv_q_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(tdiv_q)
#define _funnative _fun_paster(_ftype,tdiv_q_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(divexact)
#define _funnative _fun_paster(_ftype,divexact_si)
#include "fun_si_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq _fun_eq_paster(divexact)
#define _funnative _fun_paster(_ftype,divexact_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq pow_eq
#define _funnative _fun_paster(_ftype,pow_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _TYPE_OUT _TYPE
#define _funname_eq operator%=
#define _funnative _fun_paster(_ftype,mod_ui)
#include "fun_ui_eq.cpp"
#undef _funnative
#undef _funname_eq
#undef _TYPE_OUT

#define _funname_eq _fun_eq_paster(abs)
#define _funnative _fun_paster(_ftype,abs)
#include "fun_N_eq.cpp"
#undef _funnative
#undef _funname_eq

#define _TYPE_IN _TYPE_NEW
#include "is_divisible_by.cpp"
#undef _TYPE_IN

#define _TYPE_IN _TYPE_PTR
#include "is_divisible_by.cpp"
#undef _TYPE_IN

